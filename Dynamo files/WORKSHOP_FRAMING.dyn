{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "WORKSHOP_FRAMING",
  "ElementResolver": {
    "ResolutionMap": {
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndef getFamilyType(name, familySymbols):\r\n\tfor i in familySymbols:\r\n\t\tif Element.Name.GetValue(i) == name:\r\n\t\t\treturn i\r\n\t\t\t\r\n\t\t\t\r\ndef getLevel(name, levels):\r\n\tfor i in levels:\r\n\t\tif i.Name == name:\r\n\t\t\treturn i\r\n\t\t\t\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nlevels = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Levels).WhereElementIsNotElementType().ToElements()\r\n\r\nlevel_01 = getLevel('LEVEL 01', levels)\r\n\r\nfamilySymbols = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_StructuralFraming).OfClass(FamilySymbol).ToElements()\r\n\r\nCSVdata = IN[0]\r\nout = []\r\n\r\nfor f in CSVdata[1:]:\r\n\tsx, sy, sz = float(f.Start_X), float(f.Start_Y), float(f.Start_Z)\r\n\tex, ey, ez = float(f.End_X), float(f.End_Y), float(f.End_Z)\r\n\t\r\n\tpoint_s = XYZ(sx,sy,sz)\r\n\tpoint_e = XYZ(ex,ey,ez)\r\n\tline = Autodesk.Revit.DB.Line.CreateBound(point_s,point_e)\r\n\t\r\n\ttype = getFamilyType(f.designType, familySymbols)\r\n\t\r\n\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\tif type.IsActive == False:\r\n\t\ttype.Activate()\r\n\t\tdoc.Regenerate()\r\n\t\t\r\n\tnew_framing = doc.Create.NewFamilyInstance(line, type, level_01, Structure.StructuralType.Beam)\r\n\tTransactionManager.Instance.TransactionTaskDone()\r\n\t\r\n\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\tdoc.Regenerate()\r\n\tp = new_framing.LookupParameter('id')\r\n\tp.Set(f.id)\r\n\tTransactionManager.Instance.TransactionTaskDone()\r\n\t\r\n\tout.append(new_framing)\r\n\r\nOUT = out\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "fc71a25b1abf4c2da953d4576754e9cd",
      "Inputs": [
        {
          "Id": "c2de1914ba60470d9ce2acdaddd425b7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c2eac746a5a4b39a88666f1f70b34e9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nimport System\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Object class for CSV file data\r\nclass framing:\r\n\tdef __init__(self, row):\r\n\t\tself.id = row[0]\r\n\t\tself.designType = row[1]\r\n\t\tself.End_X = row[2]\r\n\t\tself.End_Y = row[3]\r\n\t\tself.End_Z = row[4]\r\n\t\tself.Start_X = row[5]\r\n\t\tself.Start_Y = row[6]\r\n\t\tself.Start_Z = row[7]\r\n\t\t\r\n# read file from path\r\nfilepath = \"E:/SFDUG/PythonWorkshop/CSV_files/framing.csv\"\r\nfilereader = System.IO.StreamReader(filepath)\r\n\r\nout = []\r\n\r\n# loop over items in CSV file. \r\nwhile filereader.Peek() > -1:\r\n\tline = filereader.ReadLine()\r\n\trow = line.Split(\",\")\r\n\tframe = framing(row)\r\n\tout.append(frame)\r\n\t\r\n# close file\r\nfilereader.Close()\r\n\t\r\nOUT = out",
      "VariableInputPorts": true,
      "Id": "b2211bcaa0b44aaeb2420ab981ddb44e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e7c476c7341842dcb4196a2b536aa908",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndef getFamilyType(name, familySymbols):\r\n\tfor i in familySymbols:\r\n\t\tif Element.Name.GetValue(i) == name:\r\n\t\t\treturn i\r\n\t\t\t\r\ndef getLevel(name, levels):\r\n\tfor i in levels:\r\n\t\tif i.Name == name:\r\n\t\t\treturn i\r\n\t\t\t\r\ndef dictStrucFraming(elements):\r\n\tdict = {}\r\n\tfor i in elements:\r\n\t\tkey = i.LookupParameter(\"id\").AsString()\r\n\t\tdict.Add(key, i)\r\n\treturn dict\r\n\t\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nCSVdata = IN[0]\r\n\r\nlevels = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Levels).WhereElementIsNotElementType().ToElements()\r\n\r\nfamilySymbols = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_StructuralFraming).OfClass(FamilySymbol).ToElements()\r\n\r\nelements = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\n\r\ndictStruc = dictStrucFraming(elements)\r\n\r\nfor i in CSVdata[1:]:\r\n\tdesignType = i.designType\r\n\telement = dictStruc[i.id]\r\n\t\r\n\tif element.Name != designType:\r\n\t\ttype = getFamilyType(designType, familySymbols)\r\n\t\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\t\telement.Symbol = type\r\n\t\tTransactionManager.Instance.TransactionTaskDone()\r\n\t\t\r\n",
      "VariableInputPorts": true,
      "Id": "eee85a093de2453a927c68bfcc035f6b",
      "Inputs": [
        {
          "Id": "6258b70394ca47ae90f95090ecb4c9d9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f07571484b0498fa0123fa8a0bf701e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr \r\nimport System\r\n\r\nclass framing:\r\n\tdef __init__(self, row):\r\n\t\tself.id = row[0]\r\n\t\tself.designType  = row[1]\r\n\t\tself.End_X = row[2]\r\n\t\tself.End_Y = row[3]\r\n\t\tself.End_Z = row[4]\r\n\t\tself.Start_X = row[5]\r\n\t\tself.Start_Y = row[6]\r\n\t\tself.Start_Z = row[7]\r\n\t\t\r\nfilepath = \"E:/SFDUG/PythonWorkshop/CSV_files/framingUpdate.csv\"\r\nfileReader = System.IO.StreamReader(filepath)\r\n\r\nout = []\r\n\r\nwhile fileReader.Peek() > -1:\r\n\tline = fileReader.ReadLine()\r\n\trow = line.Split(\",\")\r\n\tobj = framing(row)\r\n\tout.append(obj)\r\n\t\r\nfileReader.Close()\r\n\r\nOUT = out\r\n\t",
      "VariableInputPorts": true,
      "Id": "7370e1f4ab9648cf9aed918dfbcd7692",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9ed8fdbd15cd4717a52abb9edbd7de93",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndef OverrideElement(element, color, fill):\r\n\ti = OverrideGraphicSettings()\r\n\ti.SetProjectionFillColor(color)\r\n\ti.SetProjectionFillPatternId(fill.Id)\r\n\tdoc.ActiveView.SetElementOverrides(element.Id, i)\r\n\t\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nelements = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\n\r\nred = Autodesk.Revit.DB.Color(255, 0,0)\r\n\r\nfill = UnwrapElement(IN[0])\r\n\r\nfor i in elements:\r\n\tif i.Name == 'HSS6X0.125':\r\n\t\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\t\tOverrideElement(i, red, fill)\r\n\t\tTransactionManager.Instance.TransactionTaskDone()\r\n\t\t\r\n",
      "VariableInputPorts": true,
      "Id": "0555d7fa24674078ade4ea04a15d3bef",
      "Inputs": [
        {
          "Id": "2959d9afe13145adac21ca4a973233bf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cb1ad48d7944dab81c2d6bc23108e0f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.FillPatterns, DSRevitNodesUI",
      "SelectedIndex": 1,
      "NodeType": "ExtensionNode",
      "Id": "be4c640b69a94baca9752ae60d455933",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e86c3cb5052d428e901d152ec2ea12a1",
          "Name": "FillPattern",
          "Description": "The selected FillPattern",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All available fill patterns."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference('System')\r\nfrom System.Collections.Generic import *\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nelements = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType()\r\n\r\nids = List[ElementId]()\r\n\r\nfor i in elements:\r\n\tids.Add(i.Id)\r\n\t\r\nnew_location = XYZ(10, 10, 0)\r\n\r\n#TransactionManager.Instance.EnsureInTransaction(doc)\r\n#ElementTransformUtils.MoveElements(doc, ids, new_location)\r\n#TransactionManager.Instance.TransactionTaskDone()\r\n\t\r\n",
      "VariableInputPorts": true,
      "Id": "74f9c93575914c8b8744db407658b321",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "403d489c6e0a4225bce578d3529def51",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nsheetNum = ['S1.01', 'S1.02']\r\nsheetName = ['level 01', 'level 02']\r\n\r\ntitleblock = UnwrapElement(IN[0])\r\n\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\nfor i in range(len(sheetNum)):\r\n\tnewSheet = ViewSheet.Create(doc, titleblock.Id)\r\n\tnewSheet.SheetNumber = sheetNum[i]\r\n\tnewSheet.Name = sheetName[i]\r\n\t\r\nTransactionManager.Instance.TransactionTaskDone()",
      "VariableInputPorts": true,
      "Id": "5344eb8f1abc45aaa645bed1c0a5c21f",
      "Inputs": [
        {
          "Id": "d2badcc13a0146fc8f4f668d8f2ecfee",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16c162253f204ed895508b00c6191cc1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 15,
      "NodeType": "ExtensionNode",
      "Id": "e818027bca894879b1551ff627e9cb46",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "df79a849edf342a98034711af38cd8da",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All family types available in the document."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference('System')\r\nfrom System.Collections.Generic import *\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nelements = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType()\r\n\r\nids = List[ElementId]()\r\n\r\nfor i in elements:\r\n\tids.Add(i.Id)\r\n\r\nangle = 10\r\norigin = XYZ(0,0,0)\r\noffset = XYZ(0,0,10)\r\nrot_axis = Line.CreateBound(origin, offset)\r\n\r\n#TransactionManager.Instance.EnsureInTransaction(doc)\r\n#ElementTransformUtils.RotateElements(doc, ids, rot_axis, angle)\r\n#TransactionManager.Instance.TransactionTaskDone()\r\n",
      "VariableInputPorts": true,
      "Id": "d8a8786fd0f143bdb32d341c08baefd0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e6351e380544e07a26fa42cab50b115",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndef GetViewTemplate():\r\n\tviews = FilteredElementCollector(doc).OfClass(View)\r\n\tviewTemp = []\r\n\tfor i in views:\r\n\t\tif i.IsTemplate == True:\r\n\t\t\tviewTemp.append(i)\r\n\t\t\t\r\n\treturn viewTemp\r\n\t\r\ndef GetViews():\r\n\tviews = FilteredElementCollector(doc).OfClass(View)\r\n\treturn views\r\n\t\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nviewList = GetViews()\r\n\r\nviewTemp = GetViewTemplate()\r\n\r\n#for i in viewList:\r\n#\tif i.Name == 'Level 1' or i.Name == 'Level 2':\r\n#\t\tTransactionManager.Instance.EnsureInTransaction(doc)\r\n#\t\ti.ViewTemplateId = viewTemp[0].Id\r\n#\t\tTransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "267dc89dcb284f94808f4f943b5f67d3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fdeedc7d36f84731bed4d1f141cd59fb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nfrom System.Collections.Generic import List\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nlinkedDoc = FilteredElementCollector(doc).OfClass(RevitLinkInstance)\r\n\r\nlinkDoc, transform = [], []\r\n\r\nfor i in linkedDoc:\r\n\tlinkDoc.append(i.GetLinkDocument())\r\n\ttransform.append(i.GetTotalTransform())\r\n\t\r\nelements = FilteredElementCollector(linkDoc[0]).OfCategory(BuiltInCategory.OST_Grids).WhereElementIsNotElementType().ToElements()\r\n\r\nids = List[ElementId]()\r\n\r\nfor i in elements:\r\n\tids.Add(i.Id)\r\n\t\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\ncopy = ElementTransformUtils.CopyElements(linkDoc[0], ids, doc, transform[0],  None)\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\t",
      "VariableInputPorts": true,
      "Id": "8a525eb6e0424ed8bac9a5c5692174d3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c6c2135e038649b19e5da3677d015cc5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    }
  ],
  "Connectors": [],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.2.6826",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 58.182215256496448,
      "EyeY": 119.54518096981947,
      "EyeZ": -26.134988534837504,
      "LookX": -64.855479634454326,
      "LookY": -109.28788907372942,
      "LookZ": 53.736994985424907,
      "UpX": -0.49496182739066735,
      "UpY": 0.76604444311899045,
      "UpZ": 0.41010815718860461
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Create Structural Framing",
        "Id": "fc71a25b1abf4c2da953d4576754e9cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1128.9936495107447,
        "Y": -127.06586508593793
      },
      {
        "ShowGeometry": true,
        "Name": "Python - CSV Create",
        "Id": "b2211bcaa0b44aaeb2420ab981ddb44e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 939.647903069975,
        "Y": -144.64165022856861
      },
      {
        "ShowGeometry": true,
        "Name": "Python Update Structural Framing",
        "Id": "eee85a093de2453a927c68bfcc035f6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1116.7776377042633,
        "Y": 11.575220773608748
      },
      {
        "ShowGeometry": true,
        "Name": "Python - CSV Update",
        "Id": "7370e1f4ab9648cf9aed918dfbcd7692",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 916.91235316345183,
        "Y": -15.860612728589189
      },
      {
        "ShowGeometry": true,
        "Name": "Python Graphic Override",
        "Id": "0555d7fa24674078ade4ea04a15d3bef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1129.4484768326652,
        "Y": 151.72323623369397
      },
      {
        "ShowGeometry": true,
        "Name": "Fill Patterns",
        "Id": "be4c640b69a94baca9752ae60d455933",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 897.05904729127872,
        "Y": 195.039962071984
      },
      {
        "ShowGeometry": true,
        "Name": "Python Move Elements",
        "Id": "74f9c93575914c8b8744db407658b321",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1135.5730869576444,
        "Y": 513.97864288940252
      },
      {
        "ShowGeometry": true,
        "Name": "Python Create Sheets",
        "Id": "5344eb8f1abc45aaa645bed1c0a5c21f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1139.1112772652748,
        "Y": 683.70476486242819
      },
      {
        "ShowGeometry": true,
        "Name": "Family Types",
        "Id": "e818027bca894879b1551ff627e9cb46",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 720.3188878389135,
        "Y": 684.55947893083953
      },
      {
        "ShowGeometry": true,
        "Name": "Python Rotate Elements",
        "Id": "d8a8786fd0f143bdb32d341c08baefd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1139.4451221294582,
        "Y": 352.99225661990005
      },
      {
        "ShowGeometry": true,
        "Name": "Python Apply View Template",
        "Id": "267dc89dcb284f94808f4f943b5f67d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1145.0700400926987,
        "Y": 801.64148642829434
      },
      {
        "ShowGeometry": true,
        "Name": "Python Get Linked Document",
        "Id": "8a525eb6e0424ed8bac9a5c5692174d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1136.9324267580332,
        "Y": 947.16764127933857
      }
    ],
    "Annotations": [],
    "X": -686.00825921483852,
    "Y": -405.02113405957971,
    "Zoom": 1.0065043104810649
  }
}